<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
                        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd  
                        http://www.springframework.org/schema/context  
                        http://www.springframework.org/schema/context/spring-context-4.0.xsd  
                        http://www.springframework.org/schema/mvc  
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">
	<!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->
	<context:component-scan base-package="com.xinyue.server.controller.*" />
	
	<!-- 	add by lzc -->
	<context:component-scan base-package="com.xinyue.manage.util.*" />
	<!-- 启用spring mvc 注解 -->
	<context:annotation-config />

	<!-- 定义跳转的文件的前后缀 ，视图模式配置 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 默认编码 -->
		<property name="defaultEncoding" value="utf-8" />
		<!-- 文件大小最大值 -->
		<property name="maxUploadSize" value="10485760000" />
		<!-- 内存中的最大值 -->
		<property name="maxInMemorySize" value="40960" />
	</bean>
	
	<mvc:annotation-driven>
		<mvc:message-converters register-defaults="true">
			<!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->
			<bean id="fastJsonHttpMessageConverter"
				class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>application/json;charset=UTF-8</value>
					</list>
				</property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>
	
	<!-- 拦截器 -->
 	<mvc:interceptors>
	   <mvc:interceptor>
	       <mvc:mapping path="/member/**"/>
<!-- 	       <mvc:exclude-mapping path="/css/**"/>
	       <mvc:exclude-mapping path="/html/**"/>
	       <mvc:exclude-mapping path="/images/**"/>
	       <mvc:exclude-mapping path="/js/**"/>
	       <mvc:exclude-mapping path="/errors/**"/> -->
	       <bean class="com.xinyue.server.util.AccessibilityInterceptor">
	       </bean>
	   </mvc:interceptor>
	</mvc:interceptors>
	
	<!-- 静态资源配置 -->
	<mvc:resources mapping="/css/**" location="/WEB-INF/resources/css/" />
	<mvc:resources mapping="/js/**" location="/WEB-INF/resources/js/" />
	<mvc:resources mapping="/images/**" location="/WEB-INF/resources/images/" />
	<mvc:resources mapping="/images1/**" location="/WEB-INF/resources/images1/" />
	<mvc:resources mapping="/html/**" location="/WEB-INF/resources/html/" />
	<mvc:resources mapping="/errors/**" location="/WEB-INF/resources/errors/" />
	<mvc:resources mapping="/favicon.ico" location="/favicon.ico" />

	<!-- 全局异常配置 start -->
	<bean id="exceptionResolver"
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<prop key="java.lang.Exception">errors/error.html</prop>
			</props>
		</property>
		<property name="statusCodes">
			<props>
				<prop key="errors/error">500</prop>
				<prop key="errors/404">404</prop>
			</props>
		</property>
		<!-- 设置日志输出级别，不定义则默认不输出警告等错误日志信息 -->
		<property name="warnLogCategory" value="INFO"></property>
		<!-- 默认错误页面，当找不到上面mappings中指定的异常对应视图时，使用本默认配置 -->
		<property name="defaultErrorView" value="errors/error"></property>
		<!-- 默认HTTP状态码 -->
		<property name="defaultStatusCode" value="500"></property>
	</bean>
	<!-- 全局异常配置 end -->
</beans>